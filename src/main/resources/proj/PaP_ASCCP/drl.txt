/*******************************************************************************
 * Copyright: (c)  2014  Mayo Foundation for Medical Education and 
 *  Research (MFMER). All rights reserved. MAYO, MAYO CLINIC, and the
 *  triple-shield Mayo logo are trademarks and service marks of MFMER.
 *   
 *  Except as contained in the copyright notice above, or as used to identify 
 *  MFMER as the author of this software, the trade names, trademarks, service
 *  marks, or product names of the copyright holder shall not be used in
 *  advertising, promotion or otherwise in connection with this software without
 *  prior written authorization of the copyright holder.
 *     
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *  http://www.apache.org/licenses/LICENSE-2.0 
 *     
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and 
 *  limitations under the License. 
 * @author Kavishwar B. Wagholikar and K.E. Ravikumar
 *******************************************************************************/
 
 package drools;

import org.ohnlp.flowds.engine.Message;
import java.lang.System;
import org.ohnlp.cidb.core.*;
import org.ohnlp.cidb.io.*;
import org.ohnlp.cidb.misc.Utils;
import org.ohnlp.cidb.core.Session;
import org.ohnlp.cidb.exception.ConceptNotFoundException;
import org.ohnlp.flowds.engine.Recommend;
import org.ohnlp.flowds.engine.Recommend.RecoStatus;
import org.ohnlp.flowds.engine.Node;
import org.drools.runtime.rule.RuleContext; 
import java.lang.Exception;
import java.lang.RuntimeException;
import org.drools.spi.KnowledgeHelper;
import java.util.GregorianCalendar;
import java.util.Calendar;
import edu.mayo.bmi.nlpcdsproj.def.Definitions;

/*Drl for execution
* @author Kavishwar Wagholikar (waghsk)
* */

function java.lang.String shortString(Node n){
	return " Node"+n.getId()+":"+n.getPrefix()+"."+n.getSuffix()+"="+n.getVal();
}

function void setAgenda(RuleContext kcontext ,String x){
	//System.out.println("[info] set agenda:"+x);
	kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup(x).setFocus();
  }

function void log(KnowledgeHelper drools, String message,Session session){
        //System.out.println("["+drools.getRule().getName()+"]\t:"+message);
        //TODO can possibly include drools as on object in session, to remove it from argument
        //or directly call session drlLog
        //session.drlLog((String)drools.getRule().getName(),messsage);
        //session.drlLog("",messsage);
        String ruleName=drools.getRule().getName();
        //System.out.println(
        session.drlInfoLog(ruleName, message);
        //);
        return;
 }

function void errorLog(KnowledgeHelper drools, String message,Session session, Exception e){
        //System.out.println("["+drools.getRule().getName()+"]\t:"+message);
        //TODO can possibly include drools as on object in session, to remove it from argument
        //or directly call session drlLog
        //session.drlLog((String)drools.getRule().getName(),messsage);
        //session.drlLog("",messsage);
        String ruleName=drools.getRule().getName();
        //System.out.println(
        session.drlErrorLog(ruleName, message,e);
        //);
        return;
 }



rule start
	salience 10
    no-loop
	when 
		not Node()
		$s:Session()
	then
        Node n=new Node("1");
        insert(n);
        new Definitions($s);
        setAgenda(kcontext , "flow");
        log(drools,"started",$s);
end


rule error_incomplete_execution
	agenda-group "flow"
	salience 5
     no-loop
	when 
		 $n:Node(val==null, getMode()!=null)
		 $s:Session()
		 $r:Recommend()
		then
			ConceptNotFoundException c=new ConceptNotFoundException();
			c.setConcept($n.getName());
			c.setConceptClass($n.getMode());
			errorLog(drools,"Not found:"+$n.getName(),$s,c);
			$r.setStatus(RecoStatus.ERROR);
			update($r);
			throw c;
end

rule fell_off_flowchart
	agenda-group "flow"
	salience 5
     no-loop
	when 
		 $n:Node(val!=null)
		 $s:Session()
		 $r:Recommend()
		then
		$r.setStatus(RecoStatus.FELL_OFF_FLOWCHART);
		update($r);
		log(drools," fell off flowchart at node "+$n.getConcept()+":"+$n.getVal(),$s);
			
end


rule node_Doc_dum
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(val==null, getMode()==Document.class,getName()=="dum")
		 $s:Session($s.getObjectNoException(Document.class,"dum")==null)
		 $r:Recommend()
	then
	try{
		try{
			
			log(drools,"resolving "+$n,$s);
			
			String sql="select CASE p.Sex WHEN 'M' THEN 'male' ELSE 'female' END as sex,p.DOB as dob,p.PatientDeathDtTm as dod,  CONVERT (datetime, GETDATE()) as time from azadt..pid601 p with (NOLOCK)  where p.ActiveMRNStatus ";

		        
        if($s.getObjectNoException(Document.class,"dum")==null) throw new  java.lang.RuntimeException("concept was not defined for:"+$n.getName());
        $n.pop();
        log(drools,"resolved:"+$s.getObjectNoException(Document.class,"dum"),$s);
	 }catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept()+"\n"+e.getConceptClass(),$s);
			
			$n.push(e.getConceptClass(),e.getConcept());
			log(drools," when digressing n:"+$n,$s);
		}
        update($n);
        	
     }catch (Exception e ){
      		errorLog(drools," got exception",$s,e);  	
      		$r.setError(e);
	 		update($r);
	 		e.printStackTrace();	
	  }	
end

rule node_1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="1", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.isAlive");
		try{
			$n.setVal($s.get("Demographics.isAlive")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

// Edge 1 to 1.2 
rule edge1_TO_1_2___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="1",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("1.2");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_1_2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="1.2", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.sex");
		try{
			$n.setVal($s.get("Demographics.sex")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge1_2_TO_2___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="1.2",val=="female", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("2");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="2", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.age");
		try{
			$n.setVal($s.get("Demographics.age")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge2_TO_3___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="2",numVal!=Double.NaN,numVal>=21, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("3");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="3", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.age");
		try{
			$n.setVal($s.get("Demographics.age")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge3_TO_4___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="3",numVal!=Double.NaN,numVal<24, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("4");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge3_TO_5___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="3",numVal!=Double.NaN,numVal>=24, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("5");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_4
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="4", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("History_HSIL_ASCH_or_AGC.value");
		try{
			$n.setVal($s.get("History_HSIL_ASCH_or_AGC.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_63
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="63", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryColposcopy.value");
		try{
			$n.setVal($s.get("HistoryColposcopy.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge4_TO_R1___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="4",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R1");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge4_TO_63___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="4",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("63");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge63_TO_R1___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="63",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R1");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge63_TO_5___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="63",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("5");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_5
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="5", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryHysterectomy.value");
		try{
			$n.setVal($s.get("HistoryHysterectomy.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge5_TO_6___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="5",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("6");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }
end

rule node_58
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="58", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		// 
		$n.setConcept("Demographics.age");
		try{
		//LastCervicalCytology.AgeAt
			$n.setVal($s.get("Demographics.age")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge5_TO_58___1
	agenda-group "flow"
	salience 10
     no-loop
	when
		 $n:Node(id=="5",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("58");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_61
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="61", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCancerHighRisk.value");
		try{
			$n.setVal($s.get("CervicalCancerHighRisk.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge58_TO_59___1
	agenda-group "flow"
	salience 10
     no-loop
	when
		 $n:Node(id=="58", numVal!=Double.NaN,numVal>=66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("61");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge61_TO_R66___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="61",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R66");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge61_TO_59___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="61",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("59");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge58_TO_9___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="58",numVal!=Double.NaN,numVal<66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("9");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }
end

rule node_59
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="59", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryCIN23Status.value");
		try{
			$n.setVal($s.get("HistoryCIN23Status.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge59_TO_39___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="59",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("39");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge59_TO_R60___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="59",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R60");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule node_6
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="6", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervCancerHighRisk.value");
		try{
			$n.setVal($s.get("CervCancerHighRisk.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge6_TO_R2___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="6",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R2");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge6_TO_7___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="6",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("7");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_7
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="7", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryCIN23Status.value");
		try{
			$n.setVal($s.get("HistoryCIN23Status.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_70
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="70", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryCIN23Biopsy.value");
		try{
			$n.setVal($s.get("HistoryCIN23Biopsy.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge7_TO_8___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="7",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("8");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge70_TO_8___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="70",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("8");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }
end

rule edge7_TO_70___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="7",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("70");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_71
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="71", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryCIN23Biopsy.value");
		try{
			$n.setVal($s.get("HistoryCIN23Biopsy.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge70_TO_R4___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="70",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R4");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_8
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="8", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryHysterectomyStatus.value");
		try{
			$n.setVal($s.get("HistoryHysterectomyStatus.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		} catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge8_TO_R3___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="8",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R3");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_9
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="9", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("AnyPrevious3Cytologies_HSIL_ASCH_or_AGC.value");
		try{
			$n.setVal($s.get("AnyPrevious3Cytologies_HSIL_ASCH_or_AGC.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge9_TO_10___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="9",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("10");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge9_TO_13___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="9",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("13");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_10
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="10", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("PreviousToPreviousCervicalCytology.HSIL_ASCH_or_AGC");
		try{
			$n.setVal($s.get("PreviousToPreviousCervicalCytology.HSIL_ASCH_or_AGC")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge10_TO_13___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="10",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("13");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge10_TO_11___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="10",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("11");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_11
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="11", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastTwoCytologies_negative.value");
		try{
			$n.setVal($s.get("LastTwoCytologies_negative.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge11_TO_R5___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="11",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R5");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

//unused node
rule node_12
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="12", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.isReportFound");
		try{
			$n.setVal($s.get("LastCervicalCytology.isReportFound")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			$r.setLastTestTime($s.get("LastCervicalCytology.timeMs"))	;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge11_TO_R61___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="11",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R61");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }
end


rule node_13
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="13", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.CytologyType");
		try{
			$n.setVal($s.get("LastCervicalCytology.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			$r.setLastTestTime($s.get("LastCervicalCytology.timeMs"))	;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge13_TO_R6___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="13",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R6");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge13_TO_14___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="13",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("14");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge13_TO_19___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="13",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("19");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge13_TO_33___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="13",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("33");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge13_TO_28___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="13",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("28");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge13_TO_25___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="13",val=="unsatisfactory for evaluation", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("25");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_14
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="14", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.AgeAt");
		try{
			$n.setVal($s.get("LastCervicalCytology.AgeAt")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge14_TO_15___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="14",numVal!=Double.NaN,numVal>=25, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("15");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge14_TO_18___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="14",numVal!=Double.NaN,numVal<25, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("18");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_15
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="15", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.CytologyType");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge15_TO_62___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="15",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("62");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

// Change Rule R7 to 6.2 and 6.5; Transition to 15.5 (node 62)

rule node_62
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="62", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
		try{
			$n.setConcept("LastTwoHpv.value");
			try{
				$n.setVal($s.get("LastTwoHpv.value"));
				System.out.println("LAST TWO HPV VALUE="+$s.get("LastTwoHpv.value")) ;
				log(drools,"got val "+shortString($n),$s);
				
				if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
				$r.appendPath($n);
				
				;
				log(drools,"r "+$r,$s);
	        	update($r);
	        	
			} catch (ConceptNotFoundException e){
				log(drools," will digress for resolving "+e.getConcept(),$s);
				$n.push(Document.class,e.getPrefix());
			}
				update($n);
		} catch(Exception e) {
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     	}  	
end

rule edge62_TO_R62___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="62",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R62");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
    		drools.halt();
     }  	
end 

rule edge62_TO_R65___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="62",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R65");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge15_TO_R7___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="15",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R7");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge15_TO_R7___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="15",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R7");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge15_TO_16___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="15",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("16");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge15_TO_16___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="15",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("16");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_16
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="16", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvTestPrevious.HpvTest");
		try{
			$n.setVal($s.get("HpvTestPrevious.HpvTest")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge16_TO_17___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="16",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("17");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge16_TO_17___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="16",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("17");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge16_TO_17___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="16",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("17");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge16_TO_R11___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="16",val=="positive", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R11");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_17
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="17", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvTestLast.HpvTest");
		try{
			$n.setVal($s.get("HpvTestLast.HpvTest")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge17_TO_R8___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="17",val=="positive", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R8");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge17_TO_R9___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="17",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R9");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge17_TO_R10___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="17",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R10");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge17_TO_R10___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="17",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R10");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_18
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="18", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvTestLast.HpvTest");
		try{
			$n.setVal($s.get("HpvTestLast.HpvTest")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge18_TO_R12___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="18",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R12");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge18_TO_20___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="18",val=="positive", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("20");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge18_TO_20___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="18",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("20");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge18_TO_20___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="18",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("20");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_19
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="19", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.AgeAt");
		try{
			$n.setVal($s.get("LastCervicalCytology.AgeAt")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge19_TO_20___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="19",numVal!=Double.NaN,numVal<25, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("20");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge19_TO_22___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="19",numVal!=Double.NaN,numVal>=25, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("22");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_20
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="20", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.CytologyType");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge20_TO_21___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="20",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("21");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge20_TO_21___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="20",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("21");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge20_TO_21___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="20",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("21");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge20_TO_R14___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="20",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R14");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge20_TO_R14___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="20",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R14");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_21
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="21", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("PreviousToPreviousCervicalCytology.CytologyType");
		try{
			$n.setVal($s.get("PreviousToPreviousCervicalCytology.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge21_TO_R13___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="21",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R13");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge21_TO_R13___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="21",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R13");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge21_TO_R13___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="21",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R13");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge21_TO_R14___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="21",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R14");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge21_TO_R14___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="21",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R14");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_22
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="22", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvTestLast.HpvTest");
		try{
			$n.setVal($s.get("HpvTestLast.HpvTest")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge22_TO_R15___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="22",val=="positive", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R15");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge22_TO_23___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="22",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("23");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge22_TO_R19___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="22",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R19");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_23
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="23", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.CytologyType");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge23_TO_24___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="23",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("24");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge23_TO_24___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="23",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("24");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge23_TO_24___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="23",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("24");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge23_TO_R18___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="23",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R18");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_175
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="175", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("PreviousCervicalCytology.HSIL_ASCH_or_AGC");
		try{
			$n.setVal($s.get("PreviousCervicalCytology.HSIL_ASCH_or_AGC")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge23_TO_175
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="23",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("175");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge175_TO_R175___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="175",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R175");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule node_24
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="24", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvTestPrevious.HpvTest");
		try{
			$n.setVal($s.get("HpvTestPrevious.HpvTest")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge24_TO_R16___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="24",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R16");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge24_TO_R16___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="24",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R16");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge24_TO_R16___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="24",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R16");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge24_TO_R17___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="24",val=="positive", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R17");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_25
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="25", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("PreviousCervicalCytology.CytologyType");
		try{
			$n.setVal($s.get("PreviousCervicalCytology.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge25_TO_R20___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="25",val=="unsatisfactory for evaluation", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R20");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge25_TO_26___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="25",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("26");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge25_TO_26___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="25",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("26");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge25_TO_26___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="25",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("26");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge25_TO_26___4
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="25",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("26");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge25_TO_26___5
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="25",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("26");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_26
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="26", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvTestLast.HpvTest");
		try{
			$n.setVal($s.get("HpvTestLast.HpvTest")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge26_TO_R21___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="26",val=="positive", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R21");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge26_TO_27___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="26",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("27");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge26_TO_27___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="26",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("27");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge26_TO_27___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="26",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("27");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_27
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="27", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.AgeAt");
		try{
			$n.setVal($s.get("LastCervicalCytology.AgeAt")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge27_TO_29___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="27",numVal!=Double.NaN,numVal>66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("29");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge27_TO_R23___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="27",numVal!=Double.NaN,numVal>=30,numVal<66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R23");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge27_TO_R22___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="27",numVal!=Double.NaN,numVal>=21,numVal<30, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R22");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_28
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="28", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("PapDispositionLast.PapPerformedOutside");
		try{
			$n.setVal($s.get("PapDispositionLast.PapPerformedOutside")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			$r.setLastTestTime($s.get("PapDispositionLast.PapPerformedOutsideTimeMs"))	;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge28_TO_30___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="28",val=="True", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("30");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge28_TO_31___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="28",val=="False", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("31");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge28_TO_31___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="28",val=="null", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("31");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge28_TO_31___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="28",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("31");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_29
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="29", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCancerHighRisk.value");
		try{
			$n.setVal($s.get("CervicalCancerHighRisk.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_30
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="30", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.age");
		try{
			$n.setVal($s.get("Demographics.age")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge30_TO_R29___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="30",numVal!=Double.NaN,numVal>=21,numVal<66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R29");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_31
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="31", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.age");
		try{
			$n.setVal($s.get("Demographics.age")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge31_TO_32___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="31",numVal!=Double.NaN,numVal>=66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("32");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge31_TO_R26___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="31",numVal!=Double.NaN,numVal>=30,numVal<66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R26");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge31_TO_R25___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="31",numVal!=Double.NaN,numVal>=21,numVal<30, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R25");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge31_TO_R24___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="31",numVal!=Double.NaN,numVal<21, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R24");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_32
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="32", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCancerHighRisk.value");
		try{
			$n.setVal($s.get("CervicalCancerHighRisk.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge32_TO_R28___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="32",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R28");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge32_TO_R27___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="32",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R27");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_33
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="33", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvTestLast.HpvTest");
		try{
			$n.setVal($s.get("HpvTestLast.HpvTest")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge33_TO_37___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="33",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("37");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge33_TO_37___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="33",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("37");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge33_TO_34___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="33",val=="positive", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("34");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_34
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="34", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Hpv1618Positive.value");
		try{
			$n.setVal($s.get("Hpv1618Positive.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge34_TO_R31___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="34",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R31");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge34_TO_35___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="34",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("35");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge34_TO_35___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="34",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("35");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_35
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="35", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvPreviousPositive.value");
		try{
			$n.setVal($s.get("HpvPreviousPositive.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge35_TO_R32___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="35",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R32");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge35_TO_36___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="35",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("36");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge35_TO_36___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="35",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("36");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge35_TO_36___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="35",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("36");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_36
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="36", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.CytologyType");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge36_TO_R33___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="36",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R33");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge36_TO_R33___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="36",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R33");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge36_TO_R33___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="36",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R33");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge36_TO_R34___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="36",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R34");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge36_TO_R34___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="36",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R34");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_37
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="37", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCancerHighRisk.value");
		try{
			$n.setVal($s.get("CervicalCancerHighRisk.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge37_TO_R35___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="37",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R35");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge37_TO_38___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="37",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("38");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_38
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="38", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryCIN23Status.value");
		try{
			$n.setVal($s.get("HistoryCIN23Status.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge38_TO_39___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="38",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("39");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_80
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="80", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryCIN23Biopsy.value");
		try{
			$n.setVal($s.get("HistoryCIN23Biopsy.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end



rule edge38_TO_80___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="38",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("80");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge80_TO_39___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="80",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("81");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge80_TO_42___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="80",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("42");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_39
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="39", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryCIN23Status.timeSince");
		try{
			$n.setVal($s.get("HistoryCIN23Status.timeSince")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_81
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="81", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HistoryCIN23Biopsy.timeYears");
		try{
			$n.setVal($s.get("HistoryCIN23Biopsy.timeYears")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge39_TO_40___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="39",numVal!=Double.NaN,numVal>5,numVal<=20, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("40");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge81_TO_40___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="81",numVal!=Double.NaN,numVal>5,numVal<=20, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("40");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge39_TO_41___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="39",numVal!=Double.NaN,numVal<=5, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("41");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge81_TO_41___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="81",numVal!=Double.NaN,numVal<=5, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("41");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule edge39_TO_42___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="39",numVal!=Double.NaN,numVal>25, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("42");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end



rule node_40
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="40", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.HpvTestType");
		try{
			$n.setVal($s.get("LastCervicalCytology.HpvTestType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge40_TO_R36___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="40",val=="cotest", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R36");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge40_TO_R37___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="40",val=="reflex", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R37");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge40_TO_R37___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="40",val=="cytology_only", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R37");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_41
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="41", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("ThreeCotestsInLastFiveYears.value");
		try{
			$n.setVal($s.get("ThreeCotestsInLastFiveYears.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge41_TO_40___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="41",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("40");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge41_TO_R38___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="41",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R38");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_42
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="42", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.age");
		try{
			$n.setVal($s.get("Demographics.age")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge42_TO_43___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="42",numVal!=Double.NaN,numVal>=21,numVal<30, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("43");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge42_TO_46___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="42",numVal!=Double.NaN,numVal>=30, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("46");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_43
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="43", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.AgeAt");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.AgeAt")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge43_TO_44___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="43",numVal!=Double.NaN,numVal>=25, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("44");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge43_TO_45___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="43",numVal!=Double.NaN,numVal<25, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("45");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge43_TO_R45___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="43",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R45");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_44
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="44", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.CytologyType");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge44_TO_R39___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="44",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R39");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge44_TO_R39___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="44",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R39");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge44_TO_R39___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="44",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R39");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge44_TO_R39___4
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="44",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R39");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge44_TO_R40___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="44",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R40");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_45
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="45", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.CytologyType");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_450
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="450", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvTestPrevious.HpvTest");
		try{
			$n.setVal($s.get("HpvTestPrevious.HpvTest")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge450_TO_R41___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="450",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R41");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge450_TO_R42___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="450",val=="positive", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R42");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge450_TO_R42___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="450",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R42");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge450_TO_R42___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="450",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R42");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge45_TO_R41___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="45",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R41");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge45_TO_R41___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="45",val=="not_performed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R41");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge45_TO_R41___4
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="45",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R41");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge45_TO_R41___5
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="45",val=="ERROR-NotDescribed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R41");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge45_TO_450___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="45",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("450");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge45_TO_R42___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="45",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R42");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge45_TO_R43___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="45",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R43");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

// check why its value is not becoming positive
rule node_46
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="46", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("HpvPreviousPositive.value");
		try{
			$n.setVal($s.get("HpvPreviousPositive.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge46_TO_48___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="46",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("48");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge46_TO_48___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="46",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("48");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge46_TO_48___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="46",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("48");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge46_TO_47___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="46",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("47");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_47
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="47", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.CytologyType");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge47_TO_R50___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="47",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R50");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge47_TO_R50___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="47",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R50");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge47_TO_R50___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="47",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R50");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge47_TO_R50___4
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="47",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R50");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge47_TO_R51___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="47",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R51");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_48
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="48", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("CervicalCytologySatisfactoryPrevious.CytologyType");
		try{
			$n.setVal($s.get("CervicalCytologySatisfactoryPrevious.CytologyType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge48_TO_53___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="48",val=="negative", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("53");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge48_TO_53___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="48",val=="ASCUS", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("53");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge48_TO_53___3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="48",val=="reportNotFound", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("53");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge48_TO_53___4
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="48",val=="ERROR-NotDescribed", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("53");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge48_TO_R53___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="48",val=="LSIL", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R53");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge48_TO_R52___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="48",val=="abnormal(other than ASCUS)", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R52");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_49
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="49", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.AgeAt");
		try{
			$n.setVal($s.get("LastCervicalCytology.AgeAt")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge49_TO_50___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="49",numVal!=Double.NaN,numVal<=60, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("50");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge49_TO_51___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="49",numVal!=Double.NaN,numVal>60, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("51");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_50
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="50", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.age");
		try{
			$n.setVal($s.get("Demographics.age")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge50_TO_R46___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="50",numVal!=Double.NaN,numVal<66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R46");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge50_TO_51___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="50",numVal!=Double.NaN,numVal>=66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("51");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_51
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="51", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("ThreeConsecutiveNegativePapInLast10years.value");
		try{
			$n.setVal($s.get("ThreeConsecutiveNegativePapInLast10years.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge51_TO_52___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="51",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("52");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_52
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="52", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("TwoConsecutiveNegativeHpvInLast10years.value");
		try{
			$n.setVal($s.get("TwoConsecutiveNegativeHpvInLast10years.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge52_TO_R47___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="52",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R47");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge52_TO_R47___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="52",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R47");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_53
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="53", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.HpvTestType");
		try{
			$n.setVal($s.get("LastCervicalCytology.HpvTestType")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge53_TO_49___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="53",val=="cotest", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("49");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge53_TO_54___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="53",val=="reflex", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("54");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge53_TO_54___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="53",val=="cytology_only", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("54");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_54
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="54", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("LastCervicalCytology.AgeAt");
		try{
			$n.setVal($s.get("LastCervicalCytology.AgeAt")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge54_TO_55___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="54",numVal!=Double.NaN,numVal>62, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("55");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge54_TO_57___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="54",numVal!=Double.NaN,numVal<=62, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("57");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_55
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="55", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("ThreeConsecutiveNegativePapInLast10years.value");
		try{
			$n.setVal($s.get("ThreeConsecutiveNegativePapInLast10years.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge55_TO_56___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="55",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("56");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_56
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="56", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("TwoConsecutiveNegativeHpvInLast10years.value");
		try{
			$n.setVal($s.get("TwoConsecutiveNegativeHpvInLast10years.value")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge56_TO_R48___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="56",val=="no", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R48");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge56_TO_R48___2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="56",val=="yes", getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R48");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule node_57
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="57", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
		 
	then
	try{
		$n.setConcept("Demographics.age");
		try{
			$n.setVal($s.get("Demographics.age")); 
			log(drools,"got val "+shortString($n),$s);
			
			if($s.getDocument($n.getPrefix())==null) throw new  java.lang.RuntimeException("value not found for:"+$n);	
			$r.appendPath($n);
			
			;
			log(drools,"r "+$r,$s);
        	update($r);
        	
		}catch (ConceptNotFoundException e){
			log(drools," will digress for resolving "+e.getConcept(),$s);
			$n.push(Document.class,e.getPrefix());
		}
			update($n);
			
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge57_TO_R49___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="57",numVal!=Double.NaN,numVal<66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("R49");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end

rule edge57_TO_55___1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="57",numVal!=Double.NaN,numVal>=66, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
			$n.replace("55");
	    	update($n);
	     	log(drools,"flowing to node"+$n.getId(),$s);
	    }catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
     }  	
end


rule reco_node_R1
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R1", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
        	$r.setTag("Refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated  cytology:"+ $s.get("LastCervicalCytology.CytologyType") +". If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R1".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R2
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R2", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
        	$r.setTag("Vaginal Pap-Hpv reflex at 1 year");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	//$r.setLastTestTime($s.get("LastCervicalCytology.timeMS")) ;
        	// Change the date from HistoryHysterectomy.timeMs to LastVaginalReport.time (Not yet implemented)
        	$r.setExplaination("Vaginal Pap-Hpv reflex at 1 year (" +  $s.get("LastCervicalCytology.timeMS") +") , as history of hysterectomy and high risk");
        	//$r.setGuideline("?");
        	$r.setBrief("Vaginal Pap-Hpv reflex at 1 year");
        	$r.appendPath("Vaginal Pap-Hpv reflex at 1 year","R2".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R3
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R3", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("Vaginal Pap-Hpv reflex at 3 years");
        	// Change the date from HistoryHysterectomy.timeMs to LastVaginalReport.time (Not yet implemented)
        	// PENDING "in last 20 years"?? needed or not
        	$r.setExplaination("Vaginal Pap-Hpv reflex at 3 years, as history of hysterectomy (" +  $s.get("LastCervicalCytology.timeMS") +") in last 20 years and CIN2-3 or Adenocarcinoma in situ");
        	$r.setGuideline("");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Vaginal Pap-Hpv reflex at 3 years");
        	$r.appendPath("Vaginal Pap-Hpv reflex at 3 years","R3".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R4
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R4", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
        	$r.setTag("no vaginal Pap needed");
        	//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setExplaination("No vaginal Pap needed as history of hysterectomy (" + Utils.toDate($s.get("HistoryHysterectomy.timeMs")) +") and no history CIN2-3");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("No vaginal Pap test needed");
        	$r.appendPath("No vaginal Pap test needed ","R4".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R5
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R5", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV cotest at 3 years");
        	$r.setExplaination("PAP-HPV cotest 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+") as previous to previous PAP was AGC,HSIL or ASC-H, but previous two PAPs are negative");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	//$r.setBrief("PAP-HPV cotest on "  + $r.getNextTestDateString());
        	$r.setBrief("PAP-HPV cotest at 3 years");
        	$r.appendPath("PAP-HPV cotest at 3 years","R5".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R6
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R6", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated  cytology:"+ $s.get("LastCervicalCytology.CytologyType") +". If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	//$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up."+"@"+$s.get("LastColposcopy.timeYears")+"@"+$s.get("LastColposcopy.timeMS"));
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("Refer to colposcopy clinic","R6".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R7
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R7", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated  cytology:"+ $s.get("LastCervicalCytology.CytologyType") +" as previous PAP report ("  +  Utils.toDate($s.get("CervicalCytologySatisfactoryPrevious.timeMs")) +") indicated  cytology:"+ $s.get("CervicalCytologySatisfactoryPrevious.CytologyType") +". If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated  cytology:"+ $s.get("LastCervicalCytology.CytologyType") +" . If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	//$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up."+"@"+$s.get("LastColposcopy.timeYears")+"@"+$s.get("LastColposcopy.timeMS"));
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R7".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R8
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R8", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated  cytology:"+ $s.get("LastCervicalCytology.CytologyType") +" and "+ $s.get("LastCervicalCytology.HpvTest") +" HPV. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	//$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up."+"@"+$s.get("LastColposcopy.timeYears")+"@"+$s.get("LastColposcopy.timeMS"));
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R8".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R9
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R9", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV cotest at 3 years");
        	//$r.setExplaination("PAP-HPV cotest 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+") was ASCUS and HPV negative");
        	$r.setExplaination("PAP-HPV cotest 3 years after last PAP report was ASCUS and HPV negative");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 3 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 3 years","R9".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R10
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R10", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP (only cytology) at 1 year");
        	$r.setExplaination("PAP (only cytology) at 1 year after last PAP report ("    +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), as the report indicated  ASCUS and HPV not-performed and age is less than 25 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP (only cytology) at 1 year");
        	$r.appendPath("PAP (only cytology) at 1 year","R10".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R11
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R11", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated  ASCUS cytology and previous HPV  ("  +  Utils.toDate($s.get("HpvTestPrevious.timeMs")) +") was positive, with age < 25 years(" + $s.get("Demographics.age")+"). If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R11".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R12
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R12", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV reflex at 3 years");
        	$r.setExplaination("PAP-HPV reflex 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+"), which was ASCUS and HPV negative, and age at recent pap ("+$s.get("LastCervicalCytology.AgeAt")+")  was less than 25 years");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 3 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 years","R12".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R13
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R13", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated LSIL and previous PAP  ("  +  Utils.toDate($s.get("HpvTestPrevious.timeMs")) +") was ASCUS/LSIL, with age < 25 years(" + $s.get("Demographics.age")+"). If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R13".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R14
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R14", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP (only cytology) at 1 year");
        	$r.setExplaination("PAP (only cytology) at 1 year after last PAP report (" + Utils.toDate($s.get("LastCervicalCytology.timeMs")) +"), which was ASCUS, ASCUS/positive HPV or LSIL and age (" + $s.get("Demographics.age")+") was less than 25 years.") ;
        	//$r.setExplaination("PAP (only cytology) at 1 year after last PAP report (" +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which was "+ $s.get("LastCervicalCytology.CytologyType") +"and age (" + $s.get("Demographics.age")+") was less than 25 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP (only cytology) at 1 year");
        	$r.appendPath("PAP (only cytology) at 1 year","R14".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R15
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R15", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") was LSIL and previous PAP ("  +  Utils.toDate($s.get("HpvTestLast.timeMs")) +") was ASCUS/LSIL, with age > 25 years(" + $s.get("Demographics.age")+"). If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") was LSIL and previous PAP was ASCUS/LSIL, with age > 25 years(" + $s.get("Demographics.age")+"). If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R15".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R16
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R16", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV cotest at 1 year");
        	//$r.setExplaination("PAP-HPV cotest at 1 year after recent HPV negative and previous cytology on ("+$s.get("PreviousCervicalCytology.timeMs")+") was ASCUS/Negative and Previous HPV is negative");
        	//$r.setGuideline("?");
        	$r.setExplaination("Pap-HPV co-test now (or 1 year after) after last (or previous) LSIL cytology and HPV negative and previous Pap negative and previous HPV not performed.");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 1 year","R16".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R17
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R17", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") was LSIL and previous PAP  ("  +  Utils.toDate($s.get("HpvTestPrevious.timeMs")) +") was HPV positive, with age > 25 years(" + $s.get("Demographics.age")+"). If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R17".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end

rule reco_node_R175
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R175", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") was AGC, HSIL, and ASC-H and previous PAP  ("  +  Utils.toDate($s.get("HpvTestPrevious.timeMs")) +") was HPV positive, with age > 25 years(" + $s.get("Demographics.age")+"). If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R175".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R18
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R18", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
        	$r.setTag("refer to colposcopy clinic");
        	//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") and previous PAP  ("  +  Utils.toDate($s.get("HpvTestPrevious.timeMs")) +") are both LSIL, with age > 25 years(" + $s.get("Demographics.age")+"). If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R18".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R19
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R19", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") was LSIL and HPV was not performed, with age > 25 years(" + $s.get("Demographics.age")+"). If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R19".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R20
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R20", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as both last PAP ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") and previous PAP ("  +  Utils.toDate($s.get("PreviousCervicalCytology.timeMs")) +") are unsatisfactory for evaluation. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("Refer to colposcopy clinic","R20".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R21
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R21", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.MONTH,3);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("colposcopy or repeat PAP at 3 months");
        	$r.setExplaination("Colposcopy or repeat PAP at 3 months after last PAP (" +Utils.toDate($s.get("LastCervicalCytology.timeMs"))+ "),which was unsatisfactory for evaluation, but with positive HPV");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Colposcopy or repeat PAP on  "+ $r.getNextTestDateString());
        	$r.appendPath("colposcopy or repeat PAP at 3 months","R21".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R22
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R22", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.MONTH,3);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV reflex at 3 months");
        	$r.setExplaination("PAP-HPV reflex 3 months after last PAP (" +Utils.toDate($s.get("LastCervicalCytology.timeMs"))+ "), as the last PAP reported that the specimen was unsatisfactory for evaluation and age ("+$s.get("Demographics.age")+") is between 21 and 30 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Repeat PAP-HPV reflex on  "+ $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 months","R22".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R23
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R23", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.MONTH,3);
        	$r.setTag("PAP-HPV reflex or cotest at 3 months");
        	//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setExplaination("PAP-HPV reflex or cotest 3 months after last PAP (" +Utils.toDate($s.get("LastCervicalCytology.timeMs"))+ "), as the last PAP reported that the specimen was unsatisfactory for evaluation and age ("+$s.get("Demographics.age")+") is between 30 and 66 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Repeat PAP-HPV reflex or cotest on "+ $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex or cotest at 3 months","R23".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R24
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R24", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			;
        	$r.setTag("PAP-HPV reflex at age 21 years");
        	$r.setExplaination("PAP-HPV reflex at 21 years of age");
        	//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 21 years of age");
        	$r.appendPath("PAP-HPV reflex at age 21 years","R24".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R25
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R25", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.setNextTestTimeNow();
        	$r.setTag("PAP-HPV reflex now");
        	//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setExplaination("PAP-HPV reflex now, as there is no PAP test reported and age ("+$s.get("Demographics.age")+") is between 21 and 30 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex now");
        	$r.appendPath("PAP-HPV reflex now","R25".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R26
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R26", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.setNextTestTimeNow();
        	$r.setTag("PAP-HPV cotest or reflex now");
        	//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setExplaination("PAP-HPV cotest or reflex now, as there is no PAP test reported and age is ("+$s.get("Demographics.age")+") between 30 and 65 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest or reflex on " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest or reflex now","R26".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R27
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R27", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV reflex now");
        	$r.setExplaination("PAP-HPV reflex now, as there is no PAP test reported and patient is at high risk due to ["+ $s.get("CervicalCancerHighRisk.Conditions")+", although age is ("+$s.get("Demographics.age")+") above 65 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex on " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex now","R27".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R28
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R28", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV cotest or reflex now");
        	$r.setExplaination("PAP-HPV cotest or reflex now, as there is no PAP test reported and age is ("+$s.get("Demographics.age")+") above 65 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest or reflex on " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest or reflex now","R28".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R29
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R29", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("consider Pap test");
        	$r.setExplaination("Consider PAP test, as last PAP is performed outside("  +  Utils.toDate($s.get("PapDispositionLast.PapPerformedOutsideTimeMs")) +") .");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Consider PAP test");
        	$r.appendPath("consider Pap test","R29".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R30
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R30", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.MONTH,3);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV reflex at 3 months");
        	$r.setExplaination("PAP-HPV reflex 3 months after last PAP (" +Utils.toDate($s.get("LastCervicalCytology.timeMs"))+ "), as the last PAP reported that the specimen was unsatisfactory for evaluation, patient is high risk due to  ["+ $s.get("CervicalCancerHighRisk.Conditions")+", although age above 65 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Repeat PAP-HPV reflex on  "+ $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 months","R30".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R31
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R31", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
		 	$r.setNextTestTimeNow();
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last  PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +") indicates negative cytology but positive HPV for genotype 16/18 "+". If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R31".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R32
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R32", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last  PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +") indicates negative cytology but positive HPV and the previous Pap ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +") also indicates positive HPV"+". If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R32".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R33
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R33", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV cotest at 1 year");
        	$r.setExplaination("PAP-HPV cotest at 1 year after Last  PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"),which indicated negative cytology but positive HPV and the previous PAP was HPV negative/not-performed");
        	//$r.setExplaination("PAP-HPV cotest at 1 year after Last  PAP report, which indicated negative cytology but positive HPV and the previous PAP was HPV negative/not-performed");

        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 1 year","R33".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R34
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R34", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last  PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +") indicates negative cytology but positive HPV and the previous Pap also indicates positive HPV"+". If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R34".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end

rule reco_node_R35
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R35", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV reflex at 1 year");
        	$r.setExplaination("PAP-HPV reflex 1 year after last  PAP report ("+ Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which indicated negative cytology and HPV "+$s.get("HpvTestLast.HpvTest")+", as the patient is high risk due to "+ $s.get("CervicalCancerHighRisk.Conditions")+".");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 1 year on " + $r.getNextTestDateString());
        	//$r.setBrief("PAP-HPV reflex at 1 year") ;
        	$r.appendPath("PAP-HPV reflex at 1 year","R35".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R36
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R36", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,5);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV cotest at 5 years");
        	$r.setExplaination("PAP-HPV cotest 5 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+"), which was a normal cotest. There was history of CIN2/3 less than 20 but more than 5 years ago. Patients with CIN 2/3 may have routine screening intervals after initial post-treatment higher-frequency surveillance, but continue the routine screening for at least 20 years even if it is beyond 65 years");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 5 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 5 years","R36".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R37
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R37", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV reflex at 3 years");
        	$r.setExplaination("PAP-HPV "+ $s.get("LastCervicalCytology.HpvTestType") +" 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+"), which was a normal  "+ $s.get("LastCervicalCytology.HpvTestType") +" . There was history of CIN2/3 less than 20 but more than 5 years ago. Patients with CIN 2/3 may have routine screening intervals after initial post-treatment higher-frequency surveillance, but continue the routine screening for at least 20 years even if it is beyond 65 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 3 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 years","R37".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R38
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R38", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3) ;
        	$r.setTag("PAP-HPV cotest at 1, 2 and 5 years") ;
        	$r.setExplaination("PAP-HPV cotest at 1, 2 and 5 years after CIN 2-3 treatment ("+$s.get("HistoryCIN23Status.time")+"). There was history of CIN2/3 less than 5 years ago. Patients with CIN 2/3 may have routine screening intervals after initial post-treatment higher-frequency surveillance, but continue the routine screening for at least 20 years even if it is beyond 65 years.");
        	//$r.setGuideline("?");
        	//+$s.getDocument("CIN23").get("time")
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	//$r.setBrief("PAP-HPV cotest at 1, 2 and 5 years after CIN2-3 treatment, next due @" +$s.get("HistoryCIN23Status.timeSince")+ "@" + $s.get("HistoryCIN23Status.time") );
        	$r.setBrief("PAP-HPV cotest at 1, 2 and 5 years after CIN2-3 treatment.");
        	$r.appendPath("PAP-HPV cotest at 1, 2 and 5 years","R38".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R39
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R39", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV reflex at 3 years");
        	$r.setExplaination("PAP-HPV reflex 3 years after last PAP ("    +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which was normal, as age is between 25-29 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 3 years " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 years","R39".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R40
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R40", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
        	$r.setTag("PAP-HPV cotest at 1 and 4 years");
        	$r.setExplaination("PAP-HPV cotest at 1 and 4 years after last PAP ("    +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which was normal, as previous cytology ("    +  Utils.toDate($s.get("CervicalCytologySatisfactoryPrevious.timeMs"))  +") was abnormal and age is between 25-29 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 1 and 4 years " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 1 and 4 years","R40".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R41
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R41", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV reflex at 3 years");
        	$r.setExplaination("PAP-HPV reflex 3 years after last PAP ("    +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which was normal, as age is less than 25 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 3 years " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 years","R41".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R42
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R42", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
        	$r.setTag("PAP (only cytology) at 1 year");
        	$r.setExplaination("PAP (only cytology) at 1 year after last PAP report (" +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"),which was normal, but previous cytology was ASCUS/LSIL and age is less than 25 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP (only cytology) at 1 year");
        	$r.appendPath("PAP (only cytology) at 1 year","R42".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R43
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R43", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
        	$r.setTag("See colposcopy clinic recommendations");
        	$r.setExplaination("See colposcopy clinic recommendations, as last PAP report (" +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +") was normal, previous cytology was abnormal and age is less than 25 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("See colposcopy clinic recommendations");
        	$r.appendPath("See colposcopy clinic recommendations","R43".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R45
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R45", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV reflex at 3 years");
        	$r.setExplaination("PAP-HPV reflex 3 years after last PAP ("    +  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which was normal, as age is between 25-29 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 3 years " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 years","R45".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R46
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R46", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,5);
        	$r.setTag("PAP-HPV cotest at 5 years");
        	$r.setExplaination("PAP-HPV cotest at 5 years after last PAP report ("  +    Utils.toDate($s.get("LastCervicalCytology.timeMs")) +"), as the report indicated "+ $s.get("LastCervicalCytology.CytologyType")+ " cytology and negative HPV ("+  Utils.toDate($s.get("HpvTestLast.timeMs"))+") and the last PAP-HPV test was a cotest.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 5 years " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 5 years","R46".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R47
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R47", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,5);
        	$r.setTag("PAP-HPV cotest at 5 years if screening has not been discontinued");
        	$r.setExplaination("PAP-HPV cotest 5 years after last PAP ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+"), which was a normal cotest, as age at recent pap ("+$s.get("LastCervicalCytology.AgeAt")+")  was more than 60 and there were no 3 consecutive negative Paps or 2 negative HPV tests in the last 10 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest on at 5 years "  + $r.getNextTestDateString()+ " if screening has not been discontinued");
        	$r.appendPath("PAP-HPV cotest at 5 years if screening has not been discontinued","R47".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R48
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R48", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV reflex at 3 years if screening has not been discontinued");
        	$r.setExplaination("PAP-HPV reflex 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+"), which was a normal reflex, as age at recent pap ("+$s.get("LastCervicalCytology.AgeAt")+")  was more than 62 years and there were no 3 consecutive negative Paps or 2 negative HPV tests in the last 10 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 3 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 years if screening has not been discontinued","R48".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R49
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R49", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV reflex at 3 years");
        	$r.setExplaination("PAP-HPV reflex 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+"), which was a normal reflex, as age at recent pap ("+$s.get("LastCervicalCytology.AgeAt")+")  was less than 62 years.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV reflex at 3 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV reflex at 3 years","R49".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R50
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R50", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV cotest at 3 years");
        	$r.setExplaination("PAP-HPV cotest 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+"), which was normal, as previous PAP at ("+Utils.toDate($s.get("CervicalCytologySatisfactoryPrevious.timeMs"))+") was "+$s.get("CervicalCytologySatisfactoryPrevious.CytologyType")+" but previous HPV positive.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 3 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 3 years","R50".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R51
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R51", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
        	$r.setTag("PAP-HPV cotest at 1 and 4 years");
        	$r.setExplaination("PAP-HPV cotest at 1 and 4 years after last PAP ("+  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which was normal, as as previous HPV was positive, previous cytology (" +  Utils.toDate($s.get("CervicalCytologySatisfactoryPrevious.timeMs"))  +") was abnormal and age is above 30 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 1 and 4 years at " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 1 and 4 years","R51".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R52
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R52", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
        	$r.setTag("PAP-HPV cotest at 1 and 4 years");
        	$r.setExplaination("PAP-HPV cotest at 1 and 4 years after last PAP ("+  Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which was normal, as previous cytology (" +  Utils.toDate($s.get("CervicalCytologySatisfactoryPrevious.timeMs"))  +") was abnormal and age is above 30 years (" + $s.get("Demographics.age")+").");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 1 and 4 years at " + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 1 and 4 years","R52".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R53
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R53", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV cotest at 3 years");
        	$r.setExplaination("PAP-HPV cotest at 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+"), which was normal, as previous PAP ("+Utils.toDate($s.get("CervicalCytologySatisfactoryPrevious.timeMs"))+") was LSIL.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 3 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 3 years","R53".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end


rule reco_node_R60
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R60", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
		 	//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
        	$r.setTag("Screening for these patients not necessary");
        	$r.setExplaination("Screening for these patients not necessary as age at recent pap ("+$s.get("LastCervicalCytology.AgeAt")+")  was more than 65 and there were no history of CIN2/3.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("No screening necessary");
        	$r.appendPath("No Screening necessary","R60".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end

rule reco_node_R61
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R61", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last two PAP-HPV co-test are negative ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated  cytology:"+ $s.get("LastCervicalCytology.CytologyType") +". If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R61".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end

rule reco_node_R62
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R62", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,3);
        	$r.setTag("PAP-HPV cotest at 3 years");
        	$r.setExplaination("PAP-HPV cotest 3 years after last PAP report ("+Utils.toDate($s.get("LastCervicalCytology.timeMs"))+") was ASCUS and last 2 HPVs are negative.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("PAP-HPV cotest at 3 years on "  + $r.getNextTestDateString());
        	$r.appendPath("PAP-HPV cotest at 3 years","R62".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	 	
end

rule reco_node_R65
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R65", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,0);
			$r.setNextTestTimeNow();
        	$r.setTag("refer to colposcopy clinic");
        	$r.setExplaination("Refer to colposcopy clinic, as last PAP report ("  +  Utils.toDate($s.get("LastCervicalCytology.timeMs")) +") indicated  cytology:"+ $s.get("LastCervicalCytology.CytologyType") +" as previous PAP report ("  +  Utils.toDate($s.get("CervicalCytologySatisfactoryPrevious.timeMs")) +") indicated  cytology:"+ $s.get("CervicalCytologySatisfactoryPrevious.CytologyType") +". If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	$r.setBrief("Refer to colposcopy clinic. If colposcopy already performed, consult colposcopy clinic notes to decide on follow-up.");
        	$r.appendPath("refer to colposcopy clinic","R65".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end

rule reco_node_R66
	agenda-group "flow"
	salience 10
     no-loop
	when 
		 $n:Node(id=="R66", val==null, getMode()==null)
		 $s:Session()
		 $r:Recommend()
	then
		try{
		 	log(drools,"r "+$r+"\n"+$s,$s);
			//$r.addNextTestTimeOverLastTestTime(Calendar.YEAR,1);
			//$r.setLastTestTime(Utils.toDate($s.get("LastCervicalCytology.timeMs"))) ;
        	$r.setTag("PAP-HPV reflex at 1 year");
        	$r.setExplaination("PAP-HPV reflex 1 year after last  PAP report ("+ Utils.toDate($s.get("LastCervicalCytology.timeMs"))  +"), which indicated negative cytology and HPV "+$s.get("HpvTestLast.HpvTest")+", as the patient is high risk due to "+ $s.get("CervicalCancerHighRisk.Conditions")+".");
        	//$r.setExplaination("PAP-HPV reflex 1 year as the patient is high risk due to "+ $s.get("CervicalCancerHighRisk.Conditions")+" and age > 66.");
        	//$r.setGuideline("?");
        	$r.setGuideline($s.get("LastCervicalCytology.timeMS")) ;
        	//$r.setBrief("PAP-HPV reflex at " + $r.getNextTestDateString());
        	$r.setBrief("PAP-HPV reflex at 1 year") ;
        	$r.appendPath("PAP-HPV reflex at 1 year","R66".replace("_","."));
        	$r.setStatus(RecoStatus.COMPLETED);
			update($r);
		}catch(Exception e){
	 		errorLog(drools,e.getMessage(),$s,e);
	 		$r.setError(e);
	 		update($r);
     		e.printStackTrace();
     		drools.halt();
    	}  	
end